package FactoryDomain {
    import Bootstrap


    // **************************************** //
    // ************** COMPANY ***************** //
    // **************************************** //
    entity Company : Classifier {
        @Type = {TypeName = String;}
        @Cardinality = {Min = 1; Max = 1;}
        new slot Name : Base.Fields;

        @Type = {TypeName = Factory;}
        @Cardinality = {Min = 0; Max = -1;}
        new slot OwnedFactories : Base.Fields;

        @Type = {TypeName = DeviceModel;}
        @Cardinality = {Min = 0; Max = -1;}
        new slot OwnedDeviceModels : Base.Fields;
    }

    entity Huawei : Company {
        slot Name : Company.Name = "Huawei";
        slot OwnedFactories : Company.OwnedFactories = [Factory124];
        slot OwnedDeviceModels : Company.OwnedDeviceModels = [S400, S500];
    }



    // **************************************** //
    // ************** FACTORY ***************** //
    // **************************************** //
    entity Factory : Classifier {
        @Type = {TypeName = DeviceModel;}
        @Cardinality = {Min = 0; Max = -1;}
        new slot SupportedDeviceModels : Base.Fields;

        operation Device? ProduceDevice(DeviceModel deviceModel) {
            if (!this.SupportedDeviceModels.Contains(deviceModel)) {
                PrintError("Cannot produce device: device model '${GetID(deviceModel)}' is unsupported by '${GetID(this)}}'!");
                return null;
            }

            return null; // TODO: contract: parameter = Device, check DeviceModel?
        }
    }

    entity MP_Factory : Factory {
        @Type = {TypeName = MP_Model;}
        @Cardinality = {Min = 0; Max = -1;}
        slot SupportedDeviceModels: Factory.SupportedDeviceModels;
    }

    entity HuaweiMP_Factory : MP_Factory {
        @Type = {TypeName = HuaweiMP_Model;}
        @Cardinality = {Min = 0; Max = -1;}
        slot SupportedDeviceModels : MP_Factory.SupportedDeviceModels;

        @Type = {TypeName = HuaweiMP;}
        @Cardinality = {Min = 0; Max = -1;}
        new slot ProducedDevices : Base.Fields;

        override operation void Validate(Object subject, Base? context=null) {
            if (!(subject is HuaweiMP_Factory))
				return;
			
			Bool isIMEIValid = subject.IMEIValidation();
			
			if (!isIMEIValid) {
				Base? metaEntity=GetMeta(subject);
				throw ValidationException {
                    ValidationSource = this;
                    Meta = metaEntity;
                    Instances = new Base[subject];
                    Category = "Factory/IMEI";
                    ErrorCode = "Factory_IMEI_0";
                    Message = "One or more produced devices have an invalid IMEI!";
            	};	
			}
        }
		
        operation Bool IMEIValidation() {
            Bool result = true;
            if (this.ProducedDevices != null) {
                foreach (HuaweiMP device in GetValues(this.ProducedDevices)) {
                    if (!StrStartsWith(GetValue(device.IMEI)!!, "001", 0, false)) {
                        PrintError("Invalid IMEI of device ${GetID(device)}: it must start with '001'!");
                        result = false;
                    }
                }
            }

            return result;
        }
    }

    entity Factory124 : HuaweiMP_Factory {
        slot SupportedDeviceModels : HuaweiMP_Factory.SupportedDeviceModels = [S400, S500];
        slot ProducedDevices : HuaweiMP_Factory.ProducedDevices = [S400_001, S400_002];
    }



    // **************************************** //
    // ************** DEVICE ***************** *//
    // **************************************** //
    entity Device : Classifier, DeviceModel { }

    entity MP_Device : Device, MP_Model {
        @Type = {TypeName = String;}
        @Cardinality = {Min = 1; Max = 1;}
        new slot IMEI : Base.Fields;

        @Type = {TypeName = RamSizeOptions;}
        @Cardinality = {Min = 1; Max = 1;}
        new slot RAM : Base.Fields;
    }

    entity HuaweiMP : MP_Device, HuaweiMP_Model { }

    entity S400_001 : HuaweiMP, S400 {
        slot IMEI : MP_Device.IMEI = "001468723648726";
        slot RAM : MP_Device.RAM = FourGb;
    }

    entity S400_002 : HuaweiMP, S400 {
        slot IMEI : MP_Device.IMEI = "0018768768475638";
        slot RAM : MP_Device.RAM = EightGb;
    }



    // ******************************************** //
    // ************** DEVICEMODEL ***************** //
    // ******************************************** //
    //entity DeviceModel : Contract { }
    entity DeviceModel : Classifier { } // TODO contract

    entity MP_Model : DeviceModel {
        @Type = {TypeName = RamSizeOptions;}
        @Cardinality = {Min = 1; Max = 1;}
        new slot RAM : Base.Fields;
    }

    entity HuaweiMP_Model : MP_Model { }

    entity S400 : HuaweiMP_Model {
        @Type = {TypeName = FourOrEightGb;}
        @Cardinality = {Min = 1; Max = 1;}
        slot RAM : MP_Model.RAM;
    }

    entity S500 : HuaweiMP_Model { }



    // ******************************************** //
    // ***************** MISC ********************* //
    // ******************************************** //
    entity FactoryEnum : Classifier { }
    entity RamSizeOptions : FactoryEnum { }
    entity FourOrEightGb : RamSizeOptions { }
    entity FourGb : FourOrEightGb { }
    entity EightGb : FourOrEightGb { }
}